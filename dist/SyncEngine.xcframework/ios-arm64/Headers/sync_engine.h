// Auto-generated by cbindgen. Do not edit.


#ifndef SYNC_ENGINE_FFI_H
#define SYNC_ENGINE_FFI_H

#pragma once

#include <stdarg.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdlib.h>
#include <stdint.h>
#include <stdbool.h>

typedef struct SyncConnHandle SyncConnHandle;

void sync_string_free(char *s);

struct SyncConnHandle *sync_open(const char *path);

void sync_close(struct SyncConnHandle *handle);

int sync_init_schema(struct SyncConnHandle *handle);

char *sync_next_hlc(struct SyncConnHandle *handle, const char *origin);

int64_t sync_log_insert_fullrow(struct SyncConnHandle *handle,
                                const char *table_name,
                                const char *row_id,
                                const char *new_row_json,
                                const char *origin);

int64_t sync_log_update(struct SyncConnHandle *handle,
                        const char *table_name,
                        const char *row_id,
                        const char *columns_json,
                        const char *new_row_json,
                        const char *old_row_json,
                        const char *origin);

int64_t sync_log_delete(struct SyncConnHandle *handle,
                        const char *table_name,
                        const char *row_id,
                        const char *origin);

char *sync_get_pending_ops_json(struct SyncConnHandle *handle, int64_t limit);

int sync_mark_ops_acked(struct SyncConnHandle *handle, const int64_t *ids, uintptr_t len);

char *sync_get_remote_cursor(struct SyncConnHandle *handle);

int sync_set_remote_cursor(struct SyncConnHandle *handle, const char *cursor);

#endif  /* SYNC_ENGINE_FFI_H */
